# This SHACL file "builds" more SKOS relationships in data, such as broader relationships
# as the inverse eof narrower ones.
#
# It can be used to uplift a lightly specified vocabulary to a more fully specified one.
# This may help toos use the vocab, for example ones that need broader links when only
# narrower ones are supplied.
#
# The build rules are:
#
#   1. hasTopConcept/topConceptOf inverses
#   2. broader/narrower inverses
#   3. inScheme for all concepts in a broader -> topConceptOf tree
#   4. apply provenance annotation properties from the ConceptScheme to all the Concepts with inScheme the ConceptScheme

PREFIX schema: <https://schema.org/>
PREFIX sh: <http://www.w3.org/ns/shacl#>
PREFIX skos: <http://www.w3.org/2004/02/skos/core#>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>
BASE <https://linked.data.gov.au/def/vocpub/validator/>

<Build-ConceptScheme>
	a sh:NodeShape ;
	sh:targetClass skos:ConceptScheme ;
	sh:order 1 ;
	sh:rule [
		a sh:SPARQLRule ;
		sh:prefixes skos: ;
		sh:construct """
            CONSTRUCT {
                $this skos:hasTopConcept ?c .
            }
            WHERE {
                ?c skos:topConceptOf $this .
            }
			""" ;
	] ;
.

<Build-Concept>
	a sh:NodeShape ;
	sh:targetClass skos:Concept ;
	sh:rule [
		a sh:SPARQLRule ;
		sh:order 1 ;
		sh:prefixes skos: ;
		sh:construct """
            CONSTRUCT {
                $this skos:topConceptOf ?cs .
            }
            WHERE {
                ?cs skos:hasTopConcept $this .
            }
			""" ;
	] ,
	[
		a sh:SPARQLRule ;
		sh:order 2 ;
		sh:prefixes skos: ;
		sh:construct """
            CONSTRUCT {
                $this skos:broader ?n .
            }
            WHERE {
                ?n skos:narrower $this .
            }
			""" ;
	] ,
	[
		a sh:SPARQLRule ;
		sh:order 3 ;
		sh:prefixes skos: ;
		sh:construct """
            CONSTRUCT {
                $this skos:narrower ?b .
            }
            WHERE {
                ?b skos:broader $this .
            }
			""" ;
	] ,
	[
		a sh:SPARQLRule ;
		sh:order 4 ;
		sh:prefixes skos: ;
		sh:construct """
            CONSTRUCT {
                $this skos:inScheme ?cs .
            }
            WHERE {
                $this skos:broader*/skos:topConceptOf ?cs .
            }
			""" ;
	] ,
	[
		a sh:SPARQLRule ;
		sh:order 4 ;
		sh:prefixes skos: ;
		sh:construct """
            CONSTRUCT {
                $this ?p ?o3
            }
            WHERE {
                $this skos:inScheme ?cs .

                VALUES ?p {
                    prov:wasDerivedFrom
                    skos:historyNote
                    schema:citation
                    dcterms:source
                    dcterms:provenance
                }

                ?cs ?p ?o .

                OPTIONAL {
                    $this ?p ?o2 .
                }

                BIND (COALESCE(?o2, ?o) AS ?o3)
            }
			""" ;
	] ;

.

